<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.springboot.dao.RecruitmentDao">

    <resultMap type="com.test.springboot.entity.Recruitment" id="RecruitmentMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="compId" column="comp_id" jdbcType="INTEGER"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="compId" column="hot" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RecruitmentMap">
        select
          id, comp_id, description,hot
        from recruitment
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RecruitmentMap">
        select
          id, comp_id, description
        from recruitment
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="compId != null">
                and comp_id = #{compId}
            </if>
            <if test="description != null and description != ''">
                and description = #{description}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from recruitment
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="compId != null">
                and comp_id = #{compId}
            </if>
            <if test="description != null and description != ''">
                and description = #{description}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into recruitment(comp_id, description,hot)
        values (#{compId}, #{description},0)
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into recruitment(comp_id, description)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.compId}, #{entity.description})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into recruitment(comp_id, description)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.compId}, #{entity.description})
        </foreach>
        on duplicate key update
        comp_id = values(comp_id),
        description = values(description)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update recruitment
        <set>
            <if test="compId != null">
                comp_id = #{compId},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="hot != null">
               hot = #{hot},
            </if>

        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from recruitment where id = #{id}
    </delete>


    <select id="getcount" resultMap="RecruitmentMap">
        select * from recruitment
    </select>



    <select id="getcount1" resultMap="RecruitmentMap">
        select * from recruitment where description like concat('%', #{dec}, '%');
    </select>

    <select id="getrecruit" resultType="com.test.springboot.vo.RecuitmentVo">
<!--        select company.name,recruitment.description from recruitment, company-->
<!--        where recruitment.comp_id = company.id;-->
        select company.name,recruitment.description, recruitment.id id, recruitment.hot from recruitment, company
        where recruitment.comp_id = company.id;
    </select>

    <select id="getrecruit1" resultType="com.test.springboot.vo.RecuitmentVo">
        select company.name name,recruitment.description description, recruitment.hot from recruitment, company
        where recruitment.comp_id = company.id and recruitment.description like concat('%', #{dec}, '%')
    </select>

    <select id="getrecruit2" resultType="com.test.springboot.vo.RecuitmentVo">
        select company.name,recruitment.description, recruitment.id id from recruitment, company
        where recruitment.comp_id = company.id and company.id = #{compId};
    </select>

    <select id="gethot" resultType="java.lang.Object">
        select hot from recruitment where id=#{id}
    </select>





    <update id="updatehot">
        update recruitment set hot = hot+1 where id=#{id}
    </update>

    <update id="updatehot1">
        update recruitment set hot = hot-1 where id=#{id}
    </update>

    <update id="updatehot2">
        update recruitment set hot = 0 where id=#{id}
    </update>
</mapper>

